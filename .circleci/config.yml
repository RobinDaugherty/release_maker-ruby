version: 2.1
jobs:
  test:
    working_directory: ~/release_maker
    docker:
      - image: randomservices/ruby:2.6.1-node-browsers
        environment:
          DATABASE_URL: postgresql://ubuntu@localhost/release_maker_test?sslmode=disable
          RAILS_ENV: test
          RACK_ENV: test
      - image: postgres:10.1
        environment:
          POSTGRES_USER: ubuntu
          POSTGRES_DB: release_maker_test
          POSTGRES_PASSWORD: ""
    steps:
      - checkout
      - restore_all_caches
      - run:
          name: Bundle Install
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Yarn Install
          command: yarn install
      - save_cache:
          key: v1-{{ .Branch }}-packages-gemfile{{ checksum "Gemfile.lock" }}-yarn{{ checksum "yarn.lock" }}-{{ .Environment.CIRCLE_SHA1 }}
          paths:
            - ~/release_maker/vendor/bundle
            - ~/.cache/yarn
            - ~/release_maker/node_modules
      - run:
          name: set up database
          command: bundle exec rake db:create db:schema:load --trace
      - run:
          name: results folder
          command: mkdir /tmp/test-reports
      - run:
          name: Webpack Build
          command: bin/webpack
      - run:
          name: rspec
          command: bundle exec rspec --color --require rails_helper --format RspecJunitFormatter --out /tmp/test-reports/rspec.xml spec --format doc
      - store_artifacts:
          path: /tmp/artifacts
          destination: build
      - store_test_results:
          path: /tmp/test-reports
  deploy-to-staging:
    working_directory: ~/release_maker
    docker:
      - image: randomservices/ruby:2.6.1-node-browsers
        environment:
          RAILS_ENV: production
          SENTRY_ORG: releasemaker
          SENTRY_PROJECT: releasemaker-staging
          SENTRY_LOG_LEVEL: debug
    steps:
      - checkout
      - restore_all_caches
      - run:
          name: Bundle Install
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Yarn Install
          command: yarn install
      - run:
          name: Webpack Build
          command: bin/webpack
      - run:
          name: add host SSH keys
          command: 'echo "hazel.rndsvc.net,18.217.125.199 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNKmVLo32LqgAgWvUJD681vB34qITMKWnjoX2uxXLwRliC+6xh0g5TLz8PJxU0X0R2nTaOrcusNJMLCRpiYrot8=" >> ~/.ssh/known_hosts'
      - run:
          name: deploy
          command: bundle exec cap staging deploy
      - run:
          name: Create Sentry Release
          command: |
            mkdir sentry-temp;
            curl -sL https://sentry.io/get-cli/ | INSTALL_DIR=sentry-temp bash;
            echo "Create new release:";
            sentry-temp/sentry-cli releases new $CIRCLE_SHA1;
            echo "Add webpack sourcemaps:";
            sentry-temp/sentry-cli releases files $CIRCLE_SHA1 upload-sourcemaps public/packs;
            echo "Set commits:";
            sentry-temp/sentry-cli releases set-commits $CIRCLE_SHA1 --commit RobinDaugherty/release_maker-ruby@$CIRCLE_SHA1;
            echo "Finalize commit:";
            sentry-temp/sentry-cli releases finalize $CIRCLE_SHA1;
            echo "Deploy:";
            sentry-temp/sentry-cli releases deploys $CIRCLE_SHA1 new -e staging
  deploy-to-production:
    working_directory: ~/release_maker
    docker:
      - image: randomservices/ruby:2.6.1-node-browsers
        environment:
          RAILS_ENV: production
          SENTRY_ORG: releasemaker
          SENTRY_PROJECT: releasemaker
          SENTRY_LOG_LEVEL: debug
    steps:
      - checkout
      - restore_all_caches
      - run:
          name: Bundle Install
          command: bundle check --path=vendor/bundle || bundle install --path=vendor/bundle --jobs=4 --retry=3
      - run:
          name: Yarn Install
          command: yarn install
      - run:
          name: Webpack Build
          command: bin/webpack
      - run:
          name: add host SSH keys
          command: 'echo "hazel.rndsvc.net,18.217.125.199 ecdsa-sha2-nistp256 AAAAE2VjZHNhLXNoYTItbmlzdHAyNTYAAAAIbmlzdHAyNTYAAABBBNKmVLo32LqgAgWvUJD681vB34qITMKWnjoX2uxXLwRliC+6xh0g5TLz8PJxU0X0R2nTaOrcusNJMLCRpiYrot8=" >> ~/.ssh/known_hosts'
      - run:
          name: deploy
          command: bundle exec cap production deploy
      - run:
          name: Create Sentry Release
          command: |
            mkdir sentry-temp;
            curl -sL https://sentry.io/get-cli/ | INSTALL_DIR=sentry-temp bash;
            echo "Create new release:";
            sentry-temp/sentry-cli releases new $CIRCLE_TAG;
            echo "Add webpack sourcemaps:";
            sentry-temp/sentry-cli releases files $CIRCLE_TAG upload-sourcemaps public/packs;
            echo "Set commits:";
            sentry-temp/sentry-cli releases set-commits $CIRCLE_TAG --commit RobinDaugherty/release_maker-ruby@$CIRCLE_SHA1;
            echo "Finalize commit:";
            sentry-temp/sentry-cli releases finalize $CIRCLE_TAG;
            echo "Deploy:";
            sentry-temp/sentry-cli releases deploys $CIRCLE_TAG new -e production
commands:
  restore_all_caches:
    parameters:
    steps:
      - restore_cache:
          name: Restore Package Cache
          keys:
            - v1-{{ .Branch }}-packages-gemfile{{ checksum "Gemfile.lock" }}-yarn{{ checksum "yarn.lock" }}-{{ .Environment.CIRCLE_SHA1 }}
            - v1-{{ .Branch }}-packages-gemfile{{ checksum "Gemfile.lock" }}-yarn{{ checksum "yarn.lock" }}
            - v1-master-packages-gemfile{{ checksum "Gemfile.lock" }}-yarn{{ checksum "yarn.lock" }}
            - v1-master-packages
workflows:
  version: 2
  test-and-deploy:
    jobs:
      - test
      - deploy-to-staging:
          filters:
            branches:
              only:
                - master
            tags:
              ignore: /.*/
          requires:
            - test
      - deploy-to-production:
          filters:
            tags:
              only: '/^v[0-9]+\.[0-9]+\.[0-9]+$/'
            branches:
              ignore: /.*/
